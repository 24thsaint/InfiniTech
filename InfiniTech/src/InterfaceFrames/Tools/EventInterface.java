/*
 *  ==++++++++++++++++++++++++++++++++++++++++++++++++++++==
 *  |      CENTRAL PHILIPPINE UNIVERSITY                   |
 *  |      Bachelor of Science in Software Engineering     |
 *  |      Jaro, Iloilo City, Philippines                  |
 *  |                                                      |
 *  |          This program is written by Rave, Â©2014.     |
 *  |          You are free to use and distribute this.    |
 *  |          Reach me at: admin@blackout.biz.tm          |
 *  |                                                      |
 *  |               ~~~"CODE the FUTURE"~~~                |
 *  ==++++++++++++++++++++++++++++++++++++++++++++++++++++==
 */
package InterfaceFrames.Tools;

import Objects.Event;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Rave Noren Gidor-Sambo Villavicencio-Arevalo
 */
public class EventInterface extends javax.swing.JFrame {

    /**
     * Creates new form EventInterface
     */
    public EventInterface() {
        dlm = new DefaultListModel();
        events = Event.getFinder().findAll();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eventListScroller = new javax.swing.JScrollPane();
        eventList = new javax.swing.JList(dlm);
        eventKeywordsScroller = new javax.swing.JScrollPane();
        eventKeywords = new javax.swing.JTextArea();
        addPane = new javax.swing.JPanel();
        eventNameLabel = new javax.swing.JLabel();
        newEvent = new javax.swing.JTextField();
        newKeywordsLabel = new javax.swing.JLabel();
        newKeywordsScroller = new javax.swing.JScrollPane();
        newKeywords = new javax.swing.JTextArea();
        addEventAction = new javax.swing.JButton();
        saveChanges = new javax.swing.JButton();
        eventsLabel = new javax.swing.JLabel();
        keywordsLabel = new javax.swing.JLabel();
        deleteEventAction = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        eventList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        eventList.setToolTipText("");
        eventList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eventListMousePressed(evt);
            }
        });
        eventListScroller.setViewportView(eventList);

        eventKeywords.setColumns(20);
        eventKeywords.setRows(5);
        eventKeywords.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                eventKeywordsKeyPressed(evt);
            }
        });
        eventKeywordsScroller.setViewportView(eventKeywords);

        addPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Add New Event"));

        eventNameLabel.setText("Event Name");

        newKeywordsLabel.setText("Keywords");

        newKeywords.setColumns(20);
        newKeywords.setRows(5);
        newKeywordsScroller.setViewportView(newKeywords);

        addEventAction.setText("Add Event");
        addEventAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventActionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPaneLayout = new javax.swing.GroupLayout(addPane);
        addPane.setLayout(addPaneLayout);
        addPaneLayout.setHorizontalGroup(
            addPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(newKeywordsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eventNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newEvent)
                    .addGroup(addPaneLayout.createSequentialGroup()
                        .addComponent(newKeywordsScroller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addEventAction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        addPaneLayout.setVerticalGroup(
            addPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventNameLabel)
                    .addComponent(newEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPaneLayout.createSequentialGroup()
                        .addComponent(newKeywordsLabel)
                        .addContainerGap())
                    .addComponent(newKeywordsScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                    .addComponent(addEventAction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        saveChanges.setText("Save Changes");
        saveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChangesActionPerformed(evt);
            }
        });

        eventsLabel.setText("Events");

        keywordsLabel.setText("Keywords");

        deleteEventAction.setText("Delete Selected Event");
        deleteEventAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEventActionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(addPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(eventListScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventsLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eventKeywordsScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(deleteEventAction)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(saveChanges))
                            .addComponent(keywordsLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventsLabel)
                    .addComponent(keywordsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eventKeywordsScroller)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveChanges)
                            .addComponent(deleteEventAction)))
                    .addComponent(eventListScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        saveChanges.setEnabled(false);
        for (Event event : events) {
            dlm.addElement(event.getEventName());
        }
    }//GEN-LAST:event_formWindowOpened

    private void eventListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventListMousePressed
        eventKeywords.setText("");
        for (Event event : events) {
            if (eventList.getSelectedValue().equals(event.getEventName())) {
                for (String key : event.getKeywords()) {
                    eventKeywords.append(key + "\n");
                }
            }
        }
    }//GEN-LAST:event_eventListMousePressed

    private void addEventActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventActionActionPerformed
        addEventAction.setEnabled(false);
        Event event = new Event();
        event.setEventName(newEvent.getText().toUpperCase());
        List<String> newKeys = Arrays.asList(newKeywords.getText().toUpperCase().split("\n"));
        event.setKeywords(newKeys);

        event.save();

        this.events = Event.getFinder().findAll();
        dlm.addElement(event.getEventName());
        newKeywords.setText("");
        newEvent.setText("");
        addEventAction.setEnabled(true);
    }//GEN-LAST:event_addEventActionActionPerformed

    private void saveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesActionPerformed
        saveChanges.setEnabled(false);
        List<String> newKeys = Arrays.asList(eventKeywords.getText().split("\n"));
        for (Event event : events) {
            if (eventList.getSelectedValue().equals(event.getEventName())) {
                event.setKeywords(newKeys);
                event.update();
                return;
            }
        }
    }//GEN-LAST:event_saveChangesActionPerformed

    private void eventKeywordsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eventKeywordsKeyPressed
        saveChanges.setEnabled(true);
    }//GEN-LAST:event_eventKeywordsKeyPressed

    private void deleteEventActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEventActionActionPerformed
        int response = JOptionPane.showConfirmDialog(
                null, "Are you sure to remove " + eventList.getSelectedValue() + " ?",
                "Confirm",
                JOptionPane.YES_NO_OPTION);

        if (response == JOptionPane.YES_OPTION) {
            for (Event event : events) {
                if (eventList.getSelectedValue().equals(event.getEventName())) {
                    Event.delete(event);
                    dlm.removeElementAt(eventList.getSelectedIndex());
                    eventKeywords.setText("");
                    JOptionPane.showMessageDialog(null, "Event Deleted!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }
        } else {
            //do nothing
        }
    }//GEN-LAST:event_deleteEventActionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventInterface().setVisible(true);
            }
        });
    }

    private DefaultListModel dlm;
    private List<Event> events;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEventAction;
    private javax.swing.JPanel addPane;
    private javax.swing.JButton deleteEventAction;
    private javax.swing.JTextArea eventKeywords;
    private javax.swing.JScrollPane eventKeywordsScroller;
    private javax.swing.JList eventList;
    private javax.swing.JScrollPane eventListScroller;
    private javax.swing.JLabel eventNameLabel;
    private javax.swing.JLabel eventsLabel;
    private javax.swing.JLabel keywordsLabel;
    private javax.swing.JTextField newEvent;
    private javax.swing.JTextArea newKeywords;
    private javax.swing.JLabel newKeywordsLabel;
    private javax.swing.JScrollPane newKeywordsScroller;
    private javax.swing.JButton saveChanges;
    // End of variables declaration//GEN-END:variables
}
