/*
 *  ==++++++++++++++++++++++++++++++++++++++++++++++++++++==
 *  |      CENTRAL PHILIPPINE UNIVERSITY                   |
 *  |      Bachelor of Science in Software Engineering     |
 *  |      Jaro, Iloilo City, Philippines                  |
 *  |                                                      |
 *  |          This program is written by Rave, Â©2014.     |
 *  |          You are free to use and distribute this.    |
 *  |          Reach me at: admin@blackout.biz.tm          |
 *  |                                                      |
 *  |               ~~~"CODE the FUTURE"~~~                |
 *  ==++++++++++++++++++++++++++++++++++++++++++++++++++++==
 */
package Settings;

import Utility.ObjectParser;
import Utility.ObjectSerializer;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Rave Noren Gidor-Sambo Villavicencio-Arevalo
 */
public class SettingsInterface extends javax.swing.JFrame {

    private Settings settings;
    private DefaultListModel categoryList;

    /**
     * Creates new form SettingsInterface
     */
    public SettingsInterface() {
        this.settings = new Settings();
        try {
            Object object = ObjectSerializer.deserializeObject(Settings.SETTINGS_LOCATION);
            if (object != null) {
                this.settings = (Settings) object;
            }
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        } catch (ClassNotFoundException ex) {
            System.out.println(ex.getMessage());
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPane = new javax.swing.JPanel();
        tabs = new javax.swing.JTabbedPane();
        generalPane = new javax.swing.JPanel();
        labelDeadlineDate = new javax.swing.JLabel();
        deadlineDate = new javax.swing.JTextField();
        labelDeadlineTip = new javax.swing.JLabel();
        deadlineSeparator = new javax.swing.JSeparator();
        labelShirtSizes = new javax.swing.JLabel();
        shirtSizeScroller = new javax.swing.JScrollPane();
        shirtSizes = new javax.swing.JTextArea();
        interestsPane = new javax.swing.JPanel();
        categoryScroller = new javax.swing.JScrollPane();
        categoryList = new DefaultListModel();
        for (String s : settings.getInterests().keySet()) {
            categoryList.addElement(s);
        }
        categories = new javax.swing.JList(categoryList);
        labelCategories = new javax.swing.JLabel();
        labelKeywords = new javax.swing.JLabel();
        keywordScroller = new javax.swing.JScrollPane();
        keywords = new javax.swing.JTextArea();
        actionDeleteCategory = new javax.swing.JButton();
        interestSeparator = new javax.swing.JSeparator();
        addCategoryPane = new javax.swing.JPanel();
        actionAddCategory = new javax.swing.JButton();
        newCategory = new javax.swing.JTextField();
        labelCategoryName = new javax.swing.JLabel();
        labelKeywordsOnAdd = new javax.swing.JLabel();
        newKeywordsScroller = new javax.swing.JScrollPane();
        newKeywords = new javax.swing.JTextArea();
        keywordsTip = new javax.swing.JLabel();
        actionExit = new javax.swing.JButton();
        actionOK = new javax.swing.JButton();
        actionSaveChanges = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        rootPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelDeadlineDate.setText("Deadline Date");

        deadlineDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                deadlineDateFocusLost(evt);
            }
        });
        deadlineDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deadlineDateKeyPressed(evt);
            }
        });

        labelDeadlineTip.setText("Month/Date/Year format (eg. June/30/2014)");

        labelShirtSizes.setText("Shirt Sizes [one(1) shirt size per line]");

        shirtSizes.setColumns(20);
        shirtSizes.setRows(5);
        shirtSizes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                shirtSizesFocusLost(evt);
            }
        });
        shirtSizes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                shirtSizesKeyPressed(evt);
            }
        });
        shirtSizeScroller.setViewportView(shirtSizes);

        javax.swing.GroupLayout generalPaneLayout = new javax.swing.GroupLayout(generalPane);
        generalPane.setLayout(generalPaneLayout);
        generalPaneLayout.setHorizontalGroup(
            generalPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deadlineSeparator)
                    .addGroup(generalPaneLayout.createSequentialGroup()
                        .addGroup(generalPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(generalPaneLayout.createSequentialGroup()
                                .addComponent(labelDeadlineDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deadlineDate, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelDeadlineTip))
                            .addComponent(labelShirtSizes)
                            .addComponent(shirtSizeScroller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 73, Short.MAX_VALUE)))
                .addContainerGap())
        );
        generalPaneLayout.setVerticalGroup(
            generalPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPaneLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(generalPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDeadlineDate)
                    .addComponent(deadlineDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDeadlineTip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deadlineSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelShirtSizes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shirtSizeScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(226, Short.MAX_VALUE))
        );

        tabs.addTab("General Settings", generalPane);

        categories.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        categories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                categoriesMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                categoriesMousePressed(evt);
            }
        });
        categoryScroller.setViewportView(categories);

        labelCategories.setText("Categories");

        labelKeywords.setText("Keywords");

        keywords.setColumns(20);
        keywords.setRows(5);
        keywords.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                keywordsFocusLost(evt);
            }
        });
        keywords.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keywordsKeyPressed(evt);
            }
        });
        keywordScroller.setViewportView(keywords);

        actionDeleteCategory.setText("Delete Selected Category");
        actionDeleteCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionDeleteCategoryActionPerformed(evt);
            }
        });

        addCategoryPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Category"));

        actionAddCategory.setText("Add New Category");
        actionAddCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionAddCategoryActionPerformed(evt);
            }
        });

        labelCategoryName.setText("Category Name");

        labelKeywordsOnAdd.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelKeywordsOnAdd.setText("Keywords");

        newKeywords.setColumns(20);
        newKeywords.setRows(5);
        newKeywordsScroller.setViewportView(newKeywords);

        javax.swing.GroupLayout addCategoryPaneLayout = new javax.swing.GroupLayout(addCategoryPane);
        addCategoryPane.setLayout(addCategoryPaneLayout);
        addCategoryPaneLayout.setHorizontalGroup(
            addCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCategoryPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCategoryPaneLayout.createSequentialGroup()
                        .addComponent(labelCategoryName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newCategory))
                    .addGroup(addCategoryPaneLayout.createSequentialGroup()
                        .addComponent(labelKeywordsOnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newKeywordsScroller))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addCategoryPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(actionAddCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        addCategoryPaneLayout.setVerticalGroup(
            addCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCategoryPaneLayout.createSequentialGroup()
                .addGroup(addCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCategoryName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newKeywordsScroller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelKeywordsOnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actionAddCategory)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        keywordsTip.setText("[One(1) Keyword per line]");

        javax.swing.GroupLayout interestsPaneLayout = new javax.swing.GroupLayout(interestsPane);
        interestsPane.setLayout(interestsPaneLayout);
        interestsPaneLayout.setHorizontalGroup(
            interestsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, interestsPaneLayout.createSequentialGroup()
                .addGroup(interestsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(interestSeparator, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(interestsPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(interestsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addCategoryPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(interestsPaneLayout.createSequentialGroup()
                                .addGroup(interestsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(interestsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(interestsPaneLayout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(labelCategories)
                                            .addGap(160, 160, 160))
                                        .addComponent(categoryScroller, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(actionDeleteCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(interestsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(interestsPaneLayout.createSequentialGroup()
                                        .addComponent(labelKeywords)
                                        .addGap(18, 18, 18)
                                        .addComponent(keywordsTip))
                                    .addComponent(keywordScroller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)))))
                .addGap(190, 190, 190))
        );
        interestsPaneLayout.setVerticalGroup(
            interestsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(interestsPaneLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(interestsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCategories)
                    .addComponent(labelKeywords)
                    .addComponent(keywordsTip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(interestsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(interestsPaneLayout.createSequentialGroup()
                        .addComponent(categoryScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actionDeleteCategory))
                    .addComponent(keywordScroller))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(interestSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCategoryPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tabs.addTab("Interests", interestsPane);

        javax.swing.GroupLayout rootPaneLayout = new javax.swing.GroupLayout(rootPane);
        rootPane.setLayout(rootPaneLayout);
        rootPaneLayout.setHorizontalGroup(
            rootPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs)
                .addContainerGap())
        );
        rootPaneLayout.setVerticalGroup(
            rootPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabs)
                .addContainerGap())
        );

        actionExit.setText("Cancel");
        actionExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionExitActionPerformed(evt);
            }
        });

        actionOK.setText("OK");
        actionOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionOKActionPerformed(evt);
            }
        });

        actionSaveChanges.setText("Save Changes");
        actionSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionSaveChangesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rootPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(actionSaveChanges)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actionOK, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actionExit, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rootPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(actionOK, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actionExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(actionSaveChanges, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateSettings() {
        try {
            ObjectSerializer.serializeObject(Settings.SETTINGS_LOCATION, settings);
        } catch (IOException ex) {
            Logger.getLogger(SettingsInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        actionSaveChanges.setEnabled(false);
        shirtSizes.setText(ObjectParser.parseListToDelimiter(settings.getShirtSizes(), "\n"));
        deadlineDate.setText(settings.getSettings().get("DEADLINE"));
    }//GEN-LAST:event_formWindowOpened

    private void shirtSizesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_shirtSizesKeyPressed
        actionSaveChanges.setEnabled(true);
    }//GEN-LAST:event_shirtSizesKeyPressed

    private void actionSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionSaveChangesActionPerformed
        actionSaveChanges.setEnabled(false);
        updateSettings();
    }//GEN-LAST:event_actionSaveChangesActionPerformed

    private void actionOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionOKActionPerformed
        if (!actionSaveChanges.isEnabled()) {
            this.dispose();
            return;
        }
        int exitConfirm = JOptionPane.showConfirmDialog(
                null,
                "There are unsaved changes: Do you want to save the changes?",
                "Unsaved changes",
                JOptionPane.YES_NO_OPTION);
        if (exitConfirm == JOptionPane.YES_OPTION) {
            updateSettings();
        } else {
            //do nothing
        }
        this.dispose();
    }//GEN-LAST:event_actionOKActionPerformed

    private void actionAddCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionAddCategoryActionPerformed
        settings.updateInterest(
                newCategory.getText(),
                ObjectParser.parseDelimitedStringToList(newKeywords.getText().toUpperCase(), "\n"));
        categoryList.addElement(newCategory.getText().toUpperCase());
        newCategory.setText("");
        newKeywords.setText("");
        actionSaveChanges.setEnabled(true);
    }//GEN-LAST:event_actionAddCategoryActionPerformed

    private void shirtSizesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shirtSizesFocusLost
        List<String> list = ObjectParser.parseDelimitedStringToList(shirtSizes.getText().toUpperCase(), "\n");
        settings.setShirtSizes(list);
    }//GEN-LAST:event_shirtSizesFocusLost

    private void categoriesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoriesMousePressed
        keywords.setText(ObjectParser.parseListToDelimiter(
                settings.getInterests().get(categories.getSelectedValue()), "\n"));
    }//GEN-LAST:event_categoriesMousePressed

    private void keywordsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordsFocusLost
        try {
            settings.updateInterest(
                    (String) categories.getSelectedValue(),
                    ObjectParser.parseDelimitedStringToList(keywords.getText().toUpperCase(), "\n"));
        } catch (NullPointerException e) {
            //do nothing
        }
    }//GEN-LAST:event_keywordsFocusLost

    private void categoriesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoriesMouseEntered
        try {
            settings.updateInterest(
                    (String) categories.getSelectedValue(),
                    ObjectParser.parseDelimitedStringToList(keywords.getText().toUpperCase(), "\n"));
        } catch (NullPointerException e) {
            //do nothing
        }
    }//GEN-LAST:event_categoriesMouseEntered

    private void actionDeleteCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionDeleteCategoryActionPerformed
        String deletionKey = (String) categories.getSelectedValue();
        categoryList.remove(categories.getSelectedIndex());
        settings.getInterests().remove(deletionKey);
        keywords.setText("");
        actionSaveChanges.setEnabled(true);
    }//GEN-LAST:event_actionDeleteCategoryActionPerformed

    private void actionExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_actionExitActionPerformed

    private void keywordsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keywordsKeyPressed
        actionSaveChanges.setEnabled(true);
    }//GEN-LAST:event_keywordsKeyPressed

    private void deadlineDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deadlineDateKeyPressed
        actionSaveChanges.setEnabled(true);
    }//GEN-LAST:event_deadlineDateKeyPressed

    private void deadlineDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deadlineDateFocusLost
        SimpleDateFormat sdf = new SimpleDateFormat("MMMM/dd/yyyy");
        settings.addSetting("DEADLINE", sdf.format(new Date(deadlineDate.getText())));
    }//GEN-LAST:event_deadlineDateFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actionAddCategory;
    private javax.swing.JButton actionDeleteCategory;
    private javax.swing.JButton actionExit;
    private javax.swing.JButton actionOK;
    private javax.swing.JButton actionSaveChanges;
    private javax.swing.JPanel addCategoryPane;
    private javax.swing.JList categories;
    private javax.swing.JScrollPane categoryScroller;
    private javax.swing.JTextField deadlineDate;
    private javax.swing.JSeparator deadlineSeparator;
    private javax.swing.JPanel generalPane;
    private javax.swing.JSeparator interestSeparator;
    private javax.swing.JPanel interestsPane;
    private javax.swing.JScrollPane keywordScroller;
    private javax.swing.JTextArea keywords;
    private javax.swing.JLabel keywordsTip;
    private javax.swing.JLabel labelCategories;
    private javax.swing.JLabel labelCategoryName;
    private javax.swing.JLabel labelDeadlineDate;
    private javax.swing.JLabel labelDeadlineTip;
    private javax.swing.JLabel labelKeywords;
    private javax.swing.JLabel labelKeywordsOnAdd;
    private javax.swing.JLabel labelShirtSizes;
    private javax.swing.JTextField newCategory;
    private javax.swing.JTextArea newKeywords;
    private javax.swing.JScrollPane newKeywordsScroller;
    private javax.swing.JPanel rootPane;
    private javax.swing.JScrollPane shirtSizeScroller;
    private javax.swing.JTextArea shirtSizes;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
}
