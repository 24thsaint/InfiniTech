/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Settings;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Rave
 */
public class SettingsInterface extends javax.swing.JFrame {

    private Settings settings;

    /**
     * Creates new form SettingsInterface
     */
    public SettingsInterface() {
        try {
            settings = new Settings();
        } catch (Exception ex) {
            Logger.getLogger(SettingsInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        root = new javax.swing.JPanel();
        tabs = new javax.swing.JTabbedPane();
        generalTab = new javax.swing.JPanel();
        deadlineDateLabel = new javax.swing.JLabel();
        interestsTab = new javax.swing.JPanel();
        interestCategoriesScroller = new javax.swing.JScrollPane();
        dlm = new DefaultListModel();
        for (String category : this.settings.getCategories()) {
            if (!category.equals("")) {
                dlm.addElement(category);
            }
        }
        interestCategories = new javax.swing.JList(dlm);
        keywordsLabel = new javax.swing.JLabel();
        categoriesLabel = new javax.swing.JLabel();
        addCategoryAction = new javax.swing.JButton();
        updateAction = new javax.swing.JButton();
        deleteCategoryAction = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        keywords = new javax.swing.JTextArea();
        applyAction = new javax.swing.JButton();
        exitAction = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        root.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        deadlineDateLabel.setText("Deadline date");

        javax.swing.GroupLayout generalTabLayout = new javax.swing.GroupLayout(generalTab);
        generalTab.setLayout(generalTabLayout);
        generalTabLayout.setHorizontalGroup(
            generalTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deadlineDateLabel)
                .addContainerGap(540, Short.MAX_VALUE))
        );
        generalTabLayout.setVerticalGroup(
            generalTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deadlineDateLabel)
                .addContainerGap(450, Short.MAX_VALUE))
        );

        tabs.addTab("Dates", generalTab);

        interestCategories.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        interestCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                interestCategoriesMousePressed(evt);
            }
        });
        interestCategoriesScroller.setViewportView(interestCategories);

        keywordsLabel.setText("Keywords");

        categoriesLabel.setText("Categories");

        addCategoryAction.setText("Add New Category");
        addCategoryAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryActionActionPerformed(evt);
            }
        });

        updateAction.setText("Update");
        updateAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionActionPerformed(evt);
            }
        });

        deleteCategoryAction.setText("Delete Selected Category");
        deleteCategoryAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCategoryActionActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Guidelines to add keywords on a category:\n\n1.) Select a category from the list;\n2.) If keywords already exist on a certain category, they will be shown on the \"keywords\" field.\n3.) Only one(1) keyword per line!");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        keywords.setColumns(20);
        keywords.setLineWrap(true);
        keywords.setRows(5);
        keywords.setWrapStyleWord(true);
        jScrollPane2.setViewportView(keywords);

        javax.swing.GroupLayout interestsTabLayout = new javax.swing.GroupLayout(interestsTab);
        interestsTab.setLayout(interestsTabLayout);
        interestsTabLayout.setHorizontalGroup(
            interestsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(interestsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(interestsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(interestsTabLayout.createSequentialGroup()
                        .addGroup(interestsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addCategoryAction, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(categoriesLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(interestCategoriesScroller, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(deleteCategoryAction, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(interestsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(keywordsLabel)
                            .addComponent(updateAction, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        interestsTabLayout.setVerticalGroup(
            interestsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(interestsTabLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(interestsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(interestsTabLayout.createSequentialGroup()
                        .addComponent(keywordsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(interestsTabLayout.createSequentialGroup()
                        .addComponent(categoriesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(interestCategoriesScroller, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(interestsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCategoryAction, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateAction, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteCategoryAction, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabs.addTab("Interests", interestsTab);

        javax.swing.GroupLayout rootLayout = new javax.swing.GroupLayout(root);
        root.setLayout(rootLayout);
        rootLayout.setHorizontalGroup(
            rootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 646, Short.MAX_VALUE)
            .addGroup(rootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rootLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        rootLayout.setVerticalGroup(
            rootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
            .addGroup(rootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(rootLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tabs)
                    .addContainerGap()))
        );

        applyAction.setText("OK");
        applyAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionActionPerformed(evt);
            }
        });

        exitAction.setText("Exit");
        exitAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(root, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(applyAction, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitAction, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(root, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitAction, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyAction))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void interestCategoriesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_interestCategoriesMousePressed
        StringBuilder sb = new StringBuilder();
        for (String key : settings.getKeywords((String) interestCategories.getSelectedValue())) {
            sb.append(key);
            sb.append("\n");
        }
        keywords.setText(sb.toString());
    }//GEN-LAST:event_interestCategoriesMousePressed

    private void applyActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionActionPerformed
        this.dispose();
    }//GEN-LAST:event_applyActionActionPerformed

    private void addCategoryActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryActionActionPerformed
        String newCategory = JOptionPane.showInputDialog("Enter new category name:");
        settings.addCategory(newCategory);
        dlm.addElement(newCategory);
        JOptionPane.showMessageDialog(null,
                "New category added: Please add keywords to this category!",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_addCategoryActionActionPerformed

    private void updateActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionActionPerformed
        if (interestCategories.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null,
                    "Unable to update: Select a category from the list before updating!",
                    "Unable to update",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            settings.addKeyword((String) interestCategories.getSelectedValue(), keywords.getText());
            settings.updateKeywordFile();
            JOptionPane.showMessageDialog(null,
                    "Keywords updated!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_updateActionActionPerformed

    private void deleteCategoryActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCategoryActionActionPerformed
        if (interestCategories.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null,
                    "Unable to delete: Select a category to be deleted on the list!",
                    "Unable to delete",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            settings.deleteCategory((String) interestCategories.getSelectedValue());
            keywords.setText("");
            dlm.remove(interestCategories.getSelectedIndex());
            JOptionPane.showMessageDialog(null,
                    "Deletion successful!",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);
            settings.updateKeywordFile();
        }
    }//GEN-LAST:event_deleteCategoryActionActionPerformed

    private void exitActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitActionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsInterface().setVisible(true);
            }
        });
    }

    private DefaultListModel dlm;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCategoryAction;
    private javax.swing.JButton applyAction;
    private javax.swing.JLabel categoriesLabel;
    private javax.swing.JLabel deadlineDateLabel;
    private javax.swing.JButton deleteCategoryAction;
    private javax.swing.JButton exitAction;
    private javax.swing.JPanel generalTab;
    private javax.swing.JList interestCategories;
    private javax.swing.JScrollPane interestCategoriesScroller;
    private javax.swing.JPanel interestsTab;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea keywords;
    private javax.swing.JLabel keywordsLabel;
    private javax.swing.JPanel root;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JButton updateAction;
    // End of variables declaration//GEN-END:variables
}
